#
# @copyright   Copyright (C) 2023 Combodo SARL
# @license     http://opensource.org/licenses/AGPL-3.0
#
# This playbook is in charge to build, for a given class, the csv file that will be used as an entry for the
#  csv collector to be launched next.
#
# Input parameters:
#  - ci_class: iTop CI class of object that is presently collected.
#  - csv_directory: directory where the CSV output file should be built
#  - from_array: true if ci_class attributes appear in arrays within the host file,
#                false if ci_class attributes are at the first level of the host file
#  - host_attributes: Array of Ansible attributes to lookup in the raw file and to add to the csv output.
#  - primary_key: Array containing Ansible attributes used to build the primary key
#  - raw_directory: directory where are located all the facts related to the different CIs
#
# Output parameters:
#  - csv_file: CSV file containing all object belonging to the ci_class to be synchronized
#
---
- name: Build CSV file containing all objects of a given class to be synchronized within iTop
  hosts: localhost

  gather_facts: false

  vars:
    # Name of the output file
    csv_file: "{{ csv_directory }}/Ansible{{ ci_class }}Collector.csv"

  tasks:
    - name: Create csv file
      ansible.builtin.copy:
        content: "primary_key;{{ host_attributes | join(';') }}"
        dest: "{{ csv_file }}"

    - name: Add one line per host
      include_tasks: ./ansible.collect.line.yml
      vars:
        hostfile: "{{ item }}"
      with_fileglob: "{{ raw_directory }}/*"
      when: from_array == "false"

    - name: Add multiple lines per host
      include_tasks: ./ansible.collect.multiplelines.yml
      vars:
        hostfile: "{{ item }}"
      with_fileglob: "{{ raw_directory }}/*"
      when: from_array != "false"
