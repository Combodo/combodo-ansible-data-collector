<?xml version="1.0" encoding="UTF-8"?><!-- Default values for parameters. Do NOT alter this file, use params.local.xml instead -->
<parameters>
  <!-- iTop Parameters -->
  <itop_url>http://myitop.com</itop_url>
  <itop_login>admin</itop_login>
  <itop_password>admin</itop_password>

  <!-- Ansible Parameters -->
  <gather_facts>no</gather_facts>
  <raw_directory>data/facts/raw</raw_directory>
  <csv_directory>data/facts/csv</csv_directory>

  <!-- Brand -->
  <ansiblebrandcollector>
    <csv_file>data/facts/csv/AnsibleBrandCollector.csv</csv_file>
    <has_header>yes</has_header>
    <collect_condition>
      <virtualization_role>host</virtualization_role>
    </collect_condition>
    <primary_key type="array">
      <ansible_attribute>chassis_vendor</ansible_attribute>
    </primary_key>
    <fields>
      <name>chassis_vendor</name>
    </fields>
  </ansiblebrandcollector>

  <!-- LogicalInterface -->
  <ansiblelogicalinerfacecollector>
    <is_link>true</is_link>
    <collect_condition>
      <virtualization_role>guest</virtualization_role>
    </collect_condition>
    <primary_key type="array">
      <ansible_attribute>device</ansible_attribute>
      <ansible_attribute>hostname</ansible_attribute>
    </primary_key>
    <fields>
      <macaddress>macaddress</macaddress>
      <name>device</name>
      <speed>speed</speed>
      <virtualmachine_id>hostname</virtualmachine_id>
    </fields>
  </ansiblelogicalinerfacecollector>

  <!-- Model -->
  <ansiblemodelcollector>
    <csv_file>data/facts/csv/AnsibleModelCollector.csv</csv_file>
    <has_header>yes</has_header>
    <collect_condition>
      <virtualization_role>host</virtualization_role>
    </collect_condition>
    <primary_key type="array">
      <ansible_attribute>chassis_vendor</ansible_attribute>
      <ansible_attribute>product_name</ansible_attribute>
    </primary_key>
    <fields>
      <name>product_name</name>
      <brand_id>chassis_vendor</brand_id>
    </fields>
    <defaults>
      <type>Server</type>
    </defaults>
  </ansiblemodelcollector>

  <!-- OS Family -->
  <ansibleosfamilycollector>
    <csv_file>data/facts/csv/AnsibleOSFamilyCollector.csv</csv_file>
    <has_header>yes</has_header>
    <primary_key type="array">
      <ansible_attribute>distribution</ansible_attribute>
    </primary_key>
    <fields>
      <name>distribution</name>
    </fields>
  </ansibleosfamilycollector>

  <!-- OS Version -->
  <ansibleosversioncollector>
    <csv_file>data/facts/csv/AnsibleOSVersionCollector.csv</csv_file>
    <has_header>yes</has_header>
    <primary_key type="array">
      <ansible_attribute>distribution</ansible_attribute>
      <ansible_attribute>distribution_version</ansible_attribute>
    </primary_key>
    <fields>
      <name>distribution_version</name>
      <osfamily_id>distribution</osfamily_id>
    </fields>
  </ansibleosversioncollector>

  <!-- Server -->
  <ansibleservercollector>
    <csv_file>data/facts/csv/AnsibleServerCollector.csv</csv_file>
    <has_header>yes</has_header>
    <collect_condition>
      <virtualization_role>host</virtualization_role>
    </collect_condition>
    <primary_key type="array">
      <ansible_attribute>hostname</ansible_attribute>
    </primary_key>
    <fields>
      <brand_id>chassis_vendor</brand_id>
      <cpu>processor_vcpus</cpu>
      <description>lsb.description</description>
      <managementip>default_ipv4.address</managementip>
      <model_id>product_name</model_id>
      <name>hostname</name>
      <osfamily_id>distribution</osfamily_id>
      <osversion_id>distribution_version</osversion_id>
      <ram>memtotal_mb</ram>
      <serialnumber>product_serial</serialnumber>
    </fields>
    <defaults>
      <org_id>Demo</org_id>
      <status>production</status>
    </defaults>
  </ansibleservercollector>

  <!-- VirtualMachine -->
  <ansiblevirtualmachinecollector>
    <csv_file>data/facts/csv/AnsibleVirtualMachineCollector.csv</csv_file>
    <has_header>yes</has_header>
    <collect_condition>
      <virtualization_role>guest</virtualization_role>
    </collect_condition>
    <primary_key type="array">
      <ansible_attribute>hostname</ansible_attribute>
    </primary_key>
    <fields>
      <cpu>processor_vcpus</cpu>
      <description>lsb.description</description>
      <managementip>default_ipv4.address</managementip>
      <name>hostname</name>
      <osfamily_id>distribution</osfamily_id>
      <osversion_id>distribution_version</osversion_id>
      <ram>memtotal_mb</ram>
    </fields>
    <defaults>
      <org_id>Demo</org_id>
      <status>production</status>
    </defaults>
  </ansiblevirtualmachinecollector>

  <!-- Class collection sequence -->
  <collectors_launch_sequence type="array">
    <!-- Brand -->
    <collector>
      <name>AnsibleBrandCollector</name>
      <enable>yes</enable>
      <rank>1</rank>
    </collector>
    <!-- Model -->
    <collector>
      <name>AnsibleModelCollector</name>
      <enable>yes</enable>
      <rank>2</rank>
    </collector>
    <!-- OS Family -->
    <collector>
      <name>AnsibleOSFamilyCollector</name>
      <enable>yes</enable>
      <rank>3</rank>
    </collector>
    <!-- OS Version -->
    <collector>
      <name>AnsibleOSVersionCollector</name>
      <enable>yes</enable>
      <rank>4</rank>
    </collector>
    <!-- Server -->
    <collector>
      <name>AnsibleServerCollector</name>
      <enable>yes</enable>
      <rank>5</rank>
    </collector>
    <!-- VirtualMachine -->
    <collector>
      <name>AnsibleVirtualMachineCollector</name>
      <enable>yes</enable>
      <rank>6</rank>
    </collector>
  </collectors_launch_sequence>

  <!-- Synchronization parameters -->
  <contact_to_notify></contact_to_notify>
  <synchro_user></synchro_user>
  <json_placeholders type="hash">
    <prefix>Ansible</prefix>
    <full_load_interval>604800</full_load_interval><!-- 7 days (in seconds): 7*24*60*60 -->
    <synchro_status>production</synchro_status>
  </json_placeholders>

  <!-- Mapping tables -->
  <brand_mapping type="array">
    <!-- Syntax /pattern/replacement where:
      any delimiter can be used (not only /) but the delimiter cannot be present in the "replacement" string
      pattern is a RegExpr pattern
      replacement is a sprintf string in which:
          %1$s will be replaced by the whole matched text,
          %2$s will be replaced by the first match group, if any group is defined in the RegExpr
          %3$s will be replaced by the second matched group, etc...
    -->
    <pattern>/IBM/IBM</pattern>
    <pattern>/Hewlett Packard/Hewlett-Packard</pattern>
    <pattern>/Hewlett-Packard/Hewlett-Packard</pattern>
    <pattern>/Dell/Dell</pattern>
    <pattern>/.*/%1$s</pattern>
  </brand_mapping>
  <model_mapping type="array">
    <pattern>/.*/%1$s</pattern>
  </model_mapping>
  <os_family_mapping type="array">
    <pattern>/Ubuntu/Linux</pattern>
    <pattern>/RedHat/Linux</pattern>
    <pattern>/Debian/Linux</pattern>
    <pattern>/Linux/Linux</pattern>
    <pattern>/Windows/Windows</pattern>
    <pattern>/.*/Other</pattern>
  </os_family_mapping>
  <os_version_mapping type="array">
    <pattern>/.*/%1$s</pattern>
  </os_version_mapping>

</parameters>